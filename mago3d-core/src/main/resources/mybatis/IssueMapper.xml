<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gaia3d.persistence.IssueMapper">

	<!-- 이슈 총 건수 -->
	<select id="getIssueTotalCount" parameterType="issue" resultType="long">
		/* getIssueTotalCount */
		SELECT COUNT(issue_id) 
		FROM issue
		<trim prefix="WHERE" prefixOverrides="AND">	
			<if test="project_id != null and project_id > 0">
				project_id = #{project_id}
			</if>
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
			AND ${search_word} = #{search_value}
			</if>
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
			AND ${search_word} LIKE '%' || #{search_value} || '%'
			</if>
			<if test="start_date != null and start_date != ''">
			<![CDATA[
			AND insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="end_date != null and end_date != ''">
			<![CDATA[
			AND insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
	</select>

	<!-- 이슈 목록 -->
	<select id="getListIssue" parameterType="issue" resultType="issue">
		/* getListIssue */
		SELECT A.*, 
			(SELECT user_name FROM user_info WHERE user_id = A.user_id) AS user_name, 
			(SELECT count(issue_comment_id) FROM issue_comment WHERE issue_id = A.issue_id) AS comment_count
		FROM(
			SELECT *
			FROM issue
			<trim prefix="WHERE" prefixOverrides="AND">
				<if test="project_id != null and project_id > 0">
				project_id = #{project_id}
				</if>
				<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
				AND ${search_word} = #{search_value}
				</if>
				<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
				AND ${search_word} LIKE '%' || #{search_value} || '%'
				</if>
				<if test="start_date != null and start_date != ''">
				<![CDATA[
				AND insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
				]]>
				</if>
				<if test="end_date != null and end_date != ''">
				<![CDATA[
				AND insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
				]]>
				</if>
			</trim>
			<choose>
			<when test="order_word != null and order_word != '' and order_value != null and order_value != ''">
			ORDER BY ${order_word} ${order_value}
			</when>
			<otherwise>
			ORDER BY insert_date DESC, issue_id DESC
			</otherwise>
			</choose>
			OFFSET #{offset} LIMIT #{limit}
		) A
	</select>
	
	<!-- 이슈 총 건수 -->
	<select id="getIssueTotalCountByUserId" parameterType="issue" resultType="long">
		/* getIssueTotalCountByUserId */
		SELECT COUNT(issue_id) 
		FROM issue
		WHERE user_id = #{user_id}
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
			AND ${search_word} = #{search_value}
			</if>
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
			AND ${search_word} LIKE '%' || #{search_value} || '%'
			</if>
			<if test="start_date != null and start_date != ''">
			<![CDATA[
			AND insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="end_date != null and end_date != ''">
			<![CDATA[
			AND insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
	</select>

	<!-- 이슈 목록 -->
	<select id="getListIssueByUserId" parameterType="issue" resultType="issue">
		/* getListIssueByUserId */
		SELECT Z.*,
			(SELECT count(issue_comment_id) FROM issue_comment WHERE issue_id = Z.issue_id) AS comment_count
		FROM (	
			SELECT X.*, Y.code_name AS priority_name, Y.css_class AS priority_css_class, Y.image AS priority_image 
			FROM (		
				SELECT A.*, B.user_name, C.project_name, D.code_name AS issue_type_name, D.css_class AS issue_type_css_class, D.image AS issue_type_image
				FROM issue A LEFT OUTER JOIN user_info B ON A.user_id = B.user_id
					INNER JOIN project C ON A.project_id = C.project_id
					INNER JOIN common_code D ON A.issue_type = D.code_key
				WHERE A.user_id = #{user_id}
					<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
					AND ${search_word} = #{search_value}
					</if>
					<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
					AND ${search_word} LIKE '%' || #{search_value} || '%'
					</if>
					<if test="start_date != null and start_date != ''">
					<![CDATA[
					AND A.insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
					]]>
					</if>
					<if test="end_date != null and end_date != ''">
					<![CDATA[
					AND A.insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
					]]>
					</if>
				<choose>
				<when test="order_word != null and order_word != '' and order_value != null and order_value != ''">
				ORDER BY ${order_word} ${order_value}
				</when>
				<otherwise>
				ORDER BY A.insert_date DESC, A.issue_id DESC
				</otherwise>
				</choose>
				OFFSET #{offset} LIMIT #{limit}
			) X, common_code Y
			WHERE X.priority = Y.code_key
			<choose>
			<when test="order_word != null and order_word != '' and order_value != null and order_value != ''">
			ORDER BY ${order_word} ${order_value}
			</when>
			<otherwise>
			ORDER BY X.insert_date DESC, X.issue_id DESC
			</otherwise>
			</choose>
		) Z
	</select>
	
	<!-- 이슈 Comment 목록 -->
	<select id="getListIssueComment" parameterType="long" resultType="issueComment">
		/* getListIssueComment */
		SELECT A.*, (SELECT user_name FROM user_info WHERE user_id = A.user_id) 
		FROM issue_comment A 
		WHERE issue_id = #{issue_id} 
		ORDER BY insert_date DESC
	</select>
	
	<!-- TODO assignee, reporter 값은 N개 이므로 subquery로 하면 안됨
		이슈 정보 -->
	<select id="getIssue" parameterType="long" resultType="issue">
		/* getIssue */
		SELECT A.*,
			(SELECT project_name FROM project WHERE project_id = A.project_id) AS project_name,
			(SELECT user_name FROM user_info WHERE user_id = A.user_id) AS user_name,
<!-- 			(SELECT user_id FROM issue_people WHERE issue_id = A.issue_id AND role_type = '0') AS assignee,
			(SELECT user_id FROM issue_people WHERE issue_id = A.issue_id AND role_type = '1') AS reporter, -->
			B.contents, D.file_name, E.comment
		FROM issue A
			LEFT OUTER JOIN issue_detail B ON A.issue_id = B.issue_id
			LEFT OUTER JOIN issue_file D ON A.issue_id = D.issue_id
			LEFT OUTER JOIN issue_comment E ON A.issue_id = E.issue_id
		WHERE A.issue_id = #{issue_id}
	</select>
	
	<!-- 이슈 Comment 정보 -->
	<select id="getIssueComment" parameterType="long" resultType="issueComment">
		/* getIssueComment */
		SELECT * 
		FROM issue_comment
		WHERE issue_comment_id = #{issue_comment_id}
	</select>
	
	<!-- 이슈 등록 -->
	<insert id="insertIssue" parameterType="issue">
		/* insertIssue */
		<selectKey keyProperty="issue_id" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('issue_seq')
  		</selectKey>
		INSERT INTO issue(
			issue_id, project_id, user_id, title, priority, due_date, issue_type, status, data_key, object_key, location, latitude, longitude, height, client_ip
		) values(
			#{issue_id}, #{project_id}, #{user_id}, #{title}, #{priority},
			<if test="due_date == null or due_date == ''">
			null,
			</if>		
			<if test="due_date != null and due_date != ''">
			TO_TIMESTAMP(#{due_date}, 'YYYYMMDDHH24MISSUS'),
			</if>			
			#{issue_type}, #{status}, #{data_key}, #{object_key},
			<if test="location == null or location == ''">
			null,
			</if>		
			<if test="location != null and location != ''">
			ST_GeographyFromText(#{location}),
			</if>		
			#{latitude}, #{longitude}, #{height}, #{client_ip}
		)
	</insert>
	
	<!-- 이슈 상세 등록 -->
	<insert id="insertIssueDetail" parameterType="issue">
		/* insertIssueDetail */
		<selectKey keyProperty="issue_detail_id" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('issue_detail_seq')
  		</selectKey>
		INSERT INTO issue_detail (
			issue_detail_id, issue_id, contents
		) values (
			#{issue_detail_id}, #{issue_id}, #{contents}
		)
	</insert>
	
	<!-- 이슈 Comment 등록 -->
	<insert id="insertIssueComment" parameterType="issueComment">
		/* insertIssueComment */
		<selectKey keyProperty="issue_comment_id" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('issue_comment_seq')
  		</selectKey>
		INSERT INTO issue_comment(
			issue_comment_id, issue_id, user_id, comment, client_ip
		) values(
			#{issue_comment_id}, #{issue_id}, #{user_id}, #{comment}, #{client_ip}
		)
	</insert>
	
	<!-- 이슈 파일 등록 -->
	<insert id="insertIssueFile" parameterType="issueFile">
		/* insertIssueFile */
		<selectKey keyProperty="issue_file_id" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('issue_file_seq')
  		</selectKey>
		INSERT INTO issue_file(
			issue_file_id, issue_id, file_name, file_real_name, file_path, file_size, file_ext
		) values(
			#{issue_file_id}, #{issue_id}, #{file_name}, #{file_real_name}, #{file_path}, #{file_size}, #{file_ext}
		)
	</insert>
	
	<!-- 이슈 관계자 등록 -->
	<insert id="insertIssuePeople" parameterType="issuePeople">
		/* insertIssuePeople */
		<selectKey keyProperty="issue_people_id" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('issue_people_seq')
  		</selectKey>
		INSERT INTO issue_people(
			issue_people_id, issue_id, role_type, user_id
		) values(
			#{issue_people_id}, #{issue_id}, #{role_type}, #{user_id}
		)
	</insert>
	
	<!-- 이슈 수정 -->	
	<update id="updateIssue" parameterType="issue">
		/* updateIssue */
		UPDATE issue
		SET 
			<if test="project_id != null and project_id > 0">
			project_id = #{project_id},
			</if>
			<if test="user_id != null and user_id != ''">
			user_id = #{user_id},
			</if>
			<if test="title != null and title != ''">
			title = #{title},
			</if>
			<if test="priority != null and priority != ''">
			priority = #{priority},
			</if>
			<if test="due_date != null and due_date != ''">
			TO_TIMESTAMP(#{due_date}, 'YYYYMMDDHH24MISSUS'),
			</if>
			<if test="location != null and location != ''">
			ST_GeographyFromText(#{location}),
			</if>
			<if test="latitude != null">
			latitude = #{latitude},
			</if>
			<if test="longitude != null">
			longitude = #{longitude},
			</if>
			<if test="height != null">
			height = #{height},
			</if>
			<if test="user_id != null and user_id != ''">
			client_ip = #{client_ip},
			</if>
			update_date = NOW()
		WHERE issue_id = #{issue_id}
	</update>
	
	<!-- 이슈 상세 수정 -->	
	<update id="updateIssueDetail" parameterType="issue">
		/* updateIssueDetail */
		UPDATE issue_detail
		SET contents = #{contents}
		WHERE issue_detail_id = #{issue_detail_id}
	</update>
	
	<!-- 이슈 Comment 수정 -->	
	<update id="updateIssueComment" parameterType="issueComment">
		/* updateIssue */
		UPDATE issue
		SET comment = #{comment}
		WHERE issue_comment_id = #{issue_comment_id}
	</update>
	
	<!-- 이슈 삭제 -->
	<delete id="deleteIssue" parameterType="long">
		/* deleteIssue */
		DELETE FROM issue WHERE issue_id = #{issue_id}
	</delete>
	
	<!-- 이슈 상세 삭제 -->
	<delete id="deleteIssueDetail" parameterType="long">
		/* deleteIssueDetail */
		DELETE FROM issue_detail WHERE issue_detail_id = #{issue_detail_id}
	</delete>
	
	<!-- 이슈 Comment 삭제 -->
	<delete id="deleteIssueComment" parameterType="long">
		/* deleteIssueComment */
		DELETE FROM issue_comment WHERE issue_comment_id = #{issue_comment_id}
	</delete>
	
	<!-- 이슈 Comment 일괄 삭제 -->
	<delete id="deleteIssueCommentByIssueId" parameterType="long">
		/* deleteIssueCommentByIssueId */
		DELETE FROM issue_comment WHERE issue_id = #{issue_id}
	</delete>
	
</mapper>