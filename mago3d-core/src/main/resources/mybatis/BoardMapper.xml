<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gaia3d.persistence.BoardMapper">

	<!-- 게시물 총 건수 -->
	<select id="getBoardTotalCount" parameterType="board" resultType="long">
		/* getBoardTotalCount */
		SELECT COUNT(user_id) 
		FROM board
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
			${search_word} = #{search_value}
			</if>
			<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
			${search_word} LIKE '%' || #{search_value} || '%'
			</if>
			<if test="use_yn != null and use_yn != ''">
			AND use_yn = #{use_yn}
			</if>
			<if test="start_date != null and start_date != ''">
			<![CDATA[
			AND insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="end_date != null and end_date != ''">
			<![CDATA[
			AND insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
	</select>

	<!-- 게시물 목록 -->
	<select id="getListBoard" parameterType="board" resultType="board">
		/* getListBoard */
		SELECT A.*, 
			(SELECT user_name FROM user_info WHERE user_id = A.user_id) AS user_name, 
			(SELECT count(board_comment_id) FROM board_comment WHERE board_id = A.board_id) AS comment_count
		FROM(
			SELECT *
			FROM board 
			<trim prefix="WHERE" prefixOverrides="AND">
				<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '0'.toString()">
				${search_word} = #{search_value}
				</if>
				<if test="search_word != null and search_word != '' and search_value != null and search_value != '' and search_option == '1'.toString()">
				${search_word} LIKE '%' || #{search_value} || '%'
				</if>
				<if test="use_yn != null and use_yn != ''">
				AND use_yn = #{use_yn}
				</if>
				<if test="start_date != null and start_date != ''">
				<![CDATA[
				AND insert_date >= TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS')
				]]>
				</if>
				<if test="end_date != null and end_date != ''">
				<![CDATA[
				AND insert_date <= TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS')
				]]>
				</if>
			</trim>
			<choose>
			<when test="order_word != null and order_word != '' and order_value != null and order_value != ''">
			ORDER BY ${order_word} ${order_value}
			</when>
			<otherwise>
			ORDER BY insert_date DESC, board_id DESC
			</otherwise>
			</choose>
			OFFSET #{offset} LIMIT #{limit}
		) A
	</select>
	
	<!-- 게시물 Comment 목록 -->
	<select id="getListBoardComment" parameterType="long" resultType="boardComment">
		/* getListBoardComment */
		SELECT A.*, (SELECT user_name FROM user_info WHERE user_id = A.user_id) 
		FROM board_comment A 
		WHERE board_id = #{board_id} 
		ORDER BY insert_date DESC
	</select>
	
	<!-- 게시물 정보 -->
	<select id="getBoard" parameterType="long" resultType="board">
		/* getBoard */
		SELECT A.*,
			(SELECT user_name FROM user_info WHERE user_id = A.user_id) AS user_name, 
			(SELECT contents FROM board_detail WHERE board_id = A.board_id) AS contents 
		FROM board A
		WHERE board_id = #{board_id}
	</select>
	
	<!-- 게시물 Comment 정보 -->
	<select id="getBoardComment" parameterType="long" resultType="boardComment">
		/* getBoardComment */
		SELECT * 
		FROM board_comment
		WHERE board_comment_id = #{board_comment_id}
	</select>
	
	<!-- 게시물 등록 -->
	<insert id="insertBoard" parameterType="board">
		/* insertBoard */
		<selectKey keyProperty="board_id" resultType="long" order="BEFORE">
    		SELECT nextval('board_seq')
  		</selectKey>
		INSERT INTO board(
			board_id, title, user_id, start_date, end_date, use_yn, client_ip
		) values(
			#{board_id}, #{title}, #{user_id}, 
			<if test="start_date == null or start_date == ''">
			null,
			</if>
			<if test="start_date != null and start_date != ''">
			TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISSUS'),
			</if>
			<if test="end_date == null or end_date == ''">
			null,
			</if>		
			<if test="end_date != null and end_date != ''">
			TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISSUS'),
			</if>			
			#{use_yn}, #{client_ip}
		)
	</insert>
	
	<!-- 게시물 상세 등록 -->
	<insert id="insertBoardDetail" parameterType="board">
		/* insertBoardDetail */
		<selectKey keyProperty="board_detail_id" resultType="long" order="BEFORE">
    		SELECT nextval('board_detail_seq')
  		</selectKey>
		INSERT INTO board_detail (
			board_detail_id, board_id, contents
		) values (
			#{board_detail_id}, #{board_id}, #{contents}
		)
	</insert>
	<!-- 게시물 Comment 등록 -->
	<insert id="insertBoardComment" parameterType="boardComment">
		/* insertBoardComment */
		<selectKey keyProperty="board_comment_id" resultType="long" order="BEFORE">
    		SELECT nextval('board_comment_seq')
  		</selectKey>
		INSERT INTO board_comment(
			board_comment_id, board_id, user_id, comment, client_ip
		) values(
			#{board_comment_id}, #{board_id}, #{user_id}, #{comment}, #{client_ip}
		)
	</insert>
	
	<!-- 게시물 수정 -->	
	<update id="updateBoard" parameterType="board">
		/* updateBoard */
		UPDATE board
		SET title = #{title},
			start_date = TO_TIMESTAMP(#{start_date}, 'YYYYMMDDHH24MISS'),
			end_date = TO_TIMESTAMP(#{end_date}, 'YYYYMMDDHH24MISS'),
			use_yn = #{use_yn}
		WHERE board_id = #{board_id}
	</update>
	
	<!-- 게시물 상세 수정 -->	
	<update id="updateBoardDetail" parameterType="board">
		/* updateBoardDetail */
		UPDATE board_detail
		SET contents = #{contents}
		WHERE board_id = #{board_id}
	</update>
	
	<!-- 게시물 조회 건수 증가 -->
	<select id="updateBoardViewCount" parameterType="long">
		/* updateBoardViewCount */
		UPDATE board
		SET view_count = view_count + 1
		WHERE board_id = #{board_id}
	</select>
	
	<!-- 게시물 Comment 수정 -->	
	<update id="updateBoardComment" parameterType="boardComment">
		/* updateBoard */
		UPDATE board
		SET comment = #{comment}
		WHERE board_comment_id = #{board_comment_id}
	</update>
	
	<!-- 게시물 삭제 -->
	<delete id="deleteBoard" parameterType="long">
		/* deleteBoard */
		DELETE FROM board WHERE board_id = #{board_id}
	</delete>
	
	<!-- 게시물 상세 삭제 -->
	<delete id="deleteBoardDetail" parameterType="long">
		/* deleteBoardDetail */
		DELETE FROM board_detail WHERE board_id = #{board_id}
	</delete>
	
	<!-- 게시물 Comment 삭제 -->
	<delete id="deleteBoardComment" parameterType="long">
		/* deleteBoardComment */
		DELETE FROM board_comment WHERE board_comment_id = #{board_comment_id}
	</delete>
	
	<!-- 게시물 Comment 일괄 삭제 -->
	<delete id="deleteBoardCommentByBoardId" parameterType="long">
		/* deleteBoardCommentByBoardId */
		DELETE FROM board_comment WHERE board_id = #{board_id}
	</delete>
	
</mapper>