<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gaia3d.persistence.MenuMapper">

	<!-- 메뉴 목록 -->
	<select id="getListMenu" parameterType="menu" resultType="menu">
		/* getListMenu */
		WITH RECURSIVE menu_tree (
			menu_id, menu_type, name, name_en, parent, depth, view_order, url, url_alias, image, image_alt, css_class, default_yn, use_yn, display_yn, description, insert_date, path, cycle
		) AS (
	        SELECT A.menu_id, A.menu_type, A.name, A.name_en, A.parent, A.depth, A.view_order, A.url, A.url_alias, A.image, A.image_alt, A.css_class,
	        	A.default_yn, A.use_yn, A.display_yn,  A.description, A.insert_date, ARRAY[A.view_order], false
			FROM menu A
	        WHERE A.menu_type = #{menu_type} 
	        	AND A.parent = 0
	        <if test="default_yn != null and default_yn != ''">
	        	AND default_yn = #{default_yn}
	        </if>
	        UNION ALL
	        SELECT A.menu_id, A.menu_type, A.name, A.name_en, A.parent, A.depth, A.view_order, A.url, A.url_alias, A.image, A.image_alt, A.css_class, 
	        	A.default_yn, A.use_yn, A.display_yn, A.description, A.insert_date, path || A.view_order, A.menu_id = ANY(path)
	        FROM menu A, menu_tree B
	        WHERE A.parent = B.menu_id AND not cycle
		)
	    SELECT menu_id, menu_type, name, name_en, parent, depth, view_order, url, url_alias, image, image_alt, css_class, default_yn, use_yn, display_yn, description, insert_date, path
	    FROM menu_tree
	    ORDER BY path
	</select>
	
	<!-- 메뉴 정보 -->
	<select id="getMenu" parameterType="long" resultType="menu">
		/* getMenu */
		SELECT * FROM menu WHERE menu_id = #{menu_id}
	</select>
	
	<!-- 부모와 순서를 가지고 메뉴 정보를 취득 -->
	<select id="getMenuByParentAndViewOrder" parameterType="menu" resultType="menu">
		/* getMenuByParentAndViewOrder */
		SELECT * 
		FROM menu 
		WHERE parent = #{parent} 
		<if test="update_type == 'up'.toString()">
			<![CDATA[
			AND view_order < #{view_order}
			]]>
		ORDER BY view_order DESC 
		</if>
		<if test="update_type == 'down'.toString()">
			<![CDATA[
			AND view_order > #{view_order}
			]]>
		ORDER BY view_order 
		</if>
		LIMIT 1 
	</select>
	
	<!-- 자식 메뉴중 맨 마지막 순서의 메뉴 정보를 취득 -->
	<select id="getMaxViewOrderChildMenu" parameterType="long" resultType="menu">
		/* getMaxViewOrderChildMenu */
		SELECT * FROM menu WHERE parent = #{parent} ORDER BY view_order DESC LIMIT 1 
	</select>
	
	<!-- 자식 메뉴 목록 -->
	<select id="getListChildMenuId" parameterType="long" resultType="long">
		/* getListChildMenuId */
		SELECT menu_id FROM menu WHERE parent = #{parent}
	</select>
	
<!-- 	<select id="getListFirstDepthMenu" resultType="menu">
		SELECT * FROM menu WHERE depth = 1 AND use_yn = 'Y' ORDER BY view_order
	</select> -->
	
	<!-- menu_id 최대값 -->
	<select id="getMaxMenuId" resultType="long">
		/* getMaxMenuId */
		SELECT COALESCE(MAX(menu_id), 0) + 1 FROM menu
	</select>
	
	<!-- 메뉴 등록 -->
	<insert id="insertMenu" parameterType="menu" >
		/* insertMenu */
		INSERT INTO menu(
			menu_id, menu_type, name, name_en, parent, depth, view_order, url, url_alias, image, image_alt, css_class, use_yn, display_yn, description
		) values(
			#{menu_id}, #{menu_type}, #{name}, #{name_en}, #{parent}, #{depth}, #{view_order}, #{url}, #{url_alias}, #{image}, #{image_alt}, #{css_class}, #{use_yn}, #{display_yn}, #{description} 
		)
	</insert>
	
	<!-- 메뉴 수정 -->
	<update id="updateMenu" parameterType="menu">
		/* updateMenu */
		UPDATE menu
		SET name = #{name},
			name_en = #{name_en},
			<!-- parent = #{parent},
			depth = #{depth},
			view_order = #{view_order}, -->
			url = #{url},
			url_alias = #{url_alias},
			image = #{image},
			image_alt = #{image_alt},
			css_class = #{css_class},
			use_yn = #{use_yn},
			display_yn = #{display_yn},
			description = #{description}
		WHERE menu_id = #{menu_id}
	</update>
	
	<!-- 메뉴 순서 수정 -->
	<update id="updateViewOrderMenu" parameterType="menu">
		/* updateViewOrderMenu */
		UPDATE menu SET view_order = #{view_order} WHERE menu_id = #{menu_id}
	</update>
	
	<!-- 자식 메뉴 상태 수정-->
	<update id="updateChildMenu" parameterType="long">
		/* updateChildMenu */
		UPDATE menu SET use_yn = 'N' WHERE parent = #{parent}
	</update>
	
	<!-- 메뉴 삭제 -->
	<delete id="deleteMenu" parameterType="long">
		/* deleteMenu */
		DELETE FROM menu WHERE menu_id = #{menu_id}
	</delete>
	
</mapper>